{"version":3,"file":"checkotherfield.min.js","sources":["../src/checkotherfield.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add event listener on conditional profile field\n */\nexport const init = () => {\n    const regex = /^[129]\\d{13}$/;\n    const mform = document.querySelector('[class=\"mform\"]');\n    let inputfield = document.querySelector('#id_profile_field_PIN');\n    let parentfield = document.querySelector('#fitem_id_profile_field_PIN');\n    if (regex.test(inputfield.value)) {\n        inputfield.disabled = true;\n        parentfield.style.display = 'none';\n    }\n    const dropdownSelector = '#id_profile_field_pincheck';\n    let dropdown = document.querySelector(dropdownSelector);\n    let initialDropownValue = dropdown.value;\n    dropdown.addEventListener('change', () => {\n        const selectedValue = dropdown.value;\n        handleDropdownChange(selectedValue);\n    });\n    mform.addEventListener('submit', () => {\n        if (regex.test(inputfield.value)) {\n            dropdown.value = initialDropownValue;\n        }\n    });\n};\n\n/**\n * Add event listener on conditional profile field.\n * The value is the one from the conditional field.\n * If that contains a certain pattern in order to detect if a fake PIN should be created.\n * @param {string} value\n */\nfunction handleDropdownChange(value) {\n    // eslint-disable-next-line no-console\n    // Check if PIN is already set and is valid.\n    const regex = /^[129]\\d{13}$/;\n    let inputfield = document.querySelector('#id_profile_field_PIN');\n    let parentfield = document.querySelector('#fitem_id_profile_field_PIN');\n    if (value.toLowerCase().includes(\"not\") && !regex.test(inputfield.value)) {\n        inputfield.value = \"nopin\";\n        parentfield.style.display = 'none';\n    } else {\n        parentfield.style.display = 'block';\n        if (regex.test(inputfield.value)) {\n            inputfield.disabled = true;\n            parentfield.style.display = 'none';\n        }\n    }\n}"],"names":["regex","mform","document","querySelector","inputfield","parentfield","test","value","disabled","style","display","dropdown","initialDropownValue","addEventListener","toLowerCase","includes","handleDropdownChange"],"mappings":"kLAkBoB,WACVA,MAAQ,gBACRC,MAAQC,SAASC,cAAc,uBACjCC,WAAaF,SAASC,cAAc,yBACpCE,YAAcH,SAASC,cAAc,+BACrCH,MAAMM,KAAKF,WAAWG,SACtBH,WAAWI,UAAW,EACtBH,YAAYI,MAAMC,QAAU,YAG5BC,SAAWT,SAASC,cADC,8BAErBS,oBAAsBD,SAASJ,MACnCI,SAASE,iBAAiB,UAAU,eAiBVN,aAGpBP,MAAQ,oBACVI,WAAaF,SAASC,cAAc,yBACpCE,YAAcH,SAASC,cAAc,+BACrCI,MAAMO,cAAcC,SAAS,SAAWf,MAAMM,KAAKF,WAAWG,QAC9DH,WAAWG,MAAQ,QACnBF,YAAYI,MAAMC,QAAU,SAE5BL,YAAYI,MAAMC,QAAU,QACxBV,MAAMM,KAAKF,WAAWG,SACtBH,WAAWI,UAAW,EACtBH,YAAYI,MAAMC,QAAU,SA5BhCM,CADsBL,SAASJ,UAGnCN,MAAMY,iBAAiB,UAAU,KACzBb,MAAMM,KAAKF,WAAWG,SACtBI,SAASJ,MAAQK"}